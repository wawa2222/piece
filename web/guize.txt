
第四步：构造棋型估分

“有禁手”规则比较复杂，涉及到比较多下棋方面的技巧，而且对算法的思路没有丝毫影响，
所以下面我们主要考虑无禁手规则下的AI设计。若设计好无禁手AI，只需要让AI执黑时坚决不下到禁手点，
就可以很快构造有禁手的AI。虽然这种方式没有利用有禁手规则下的技巧，但这些技巧只需要修改下面所讲到的估分函数即可。

我们可以将五子棋的连珠可以分为以下几种：

成5：即构成五子连珠

活4：即构成两边均不被拦截的四子连珠。

死4：一边被拦截的四子连珠

活3：两边均不被拦截的三字连珠

死3：一边被拦截的三字连珠

活2：两边均不被拦截的二子连珠

死2：一边被拦截的二子连珠

单子：四周无相连棋子

根据五子棋的技巧，可以将五子棋的棋型用连珠进行分类，分类过后我们按照威力给每种棋型打分。
因为五子棋一次只落一子，因此很容易理解，双活三和三活三的威力是一样的，类似情况不多做解释。
程序中，我以100分为满分，对棋型进行了以下打分：

    成5, 100分

    活4、双死4、死4活3， 90分

    双活3， 80分

    死3活3， 70分

    死4， 60分

    活3， 50分

    双活2， 40分

    死3， 30分

    活2， 20分

    死2， 10分

    单子 0分

有了估分方法，就有了五子棋AI的基础，接下来就是一些博弈的方法了。



第五步：得到位置估分AI

单纯应用棋谱以及对五子棋当前局势的分析，对每步进行估分，
程序中做如下工作：将每个位置进行分析，假设AI落子在该位置，用以上打分规则为AI打分,并将得到的分数加一。
然后，假设玩家落子在该点，为玩家打分，然后将所有的分值汇总。取最高分作为这个位置的估分，接下来就是取分数最高的位置下棋了.
“位置估分”，下棋的时候，既可以考虑到自己攻击对手，又能考虑到对对手的防御，可以说，很多时候可以顶上考虑两步的AI。作实验，从网上下载了一个用博弈做的AI，
和“位置估分”对下，结果是一胜一负。谁先子，谁赢得胜利。而且一步估分毫无疑问是最快的，即使遍历所有位置，也能很快的做出决策。



第六步：应用博弈树，提高AI智能

做五子棋的博弈，自然会用到博弈树，这里我说下自己的思路。在对弈中,根据下一步由谁来走,
AI对任何一个局面根据前面估分方法给出一个分数,我们把这个估分方法汇总成一个评估函数，并返回分值。
据此来选择下一步的走法。由于人和AI是轮流落子，可以将人的估分也算入，并将前面加负号。那么，估值越大表明对AI越有利，
估分越小则表明对AI越不利。那么每次AI选择都是从它可能的走法树的某层节点，返回评估值中最大点。而用户总是从走法树的某层节点中选择最小点，
从而形成一棵极大极小搜索树，然后根据深度优先搜索，可以最后得到固定搜索深度下的一个最好的走法。我做了下试验，单纯应用博弈树，可以在100ms之内让AI考虑完整的两步，
由于组合爆炸，当需要考虑三步的时候，就需要6s左右，4步就需要1分钟。拿两步来和一步估分作比较，虽然比较慢，但是确实有了一定智能。



